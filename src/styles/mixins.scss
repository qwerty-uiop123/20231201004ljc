// 响应式断点
$breakpoint-xs: 480px;
$breakpoint-sm: 768px;
$breakpoint-md: 1024px;
$breakpoint-lg: 1280px;
$breakpoint-xl: 1440px;

// 响应式混合宏
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-xs - 1px}) { @content; }
  }
  @if $breakpoint == sm {
    @media (min-width: #{$breakpoint-xs}) and (max-width: #{$breakpoint-sm - 1px}) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: #{$breakpoint-sm}) and (max-width: #{$breakpoint-md - 1px}) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: #{$breakpoint-md}) and (max-width: #{$breakpoint-lg - 1px}) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: #{$breakpoint-lg}) { @content; }
  }
  @if $breakpoint == sm-down {
    @media (max-width: #{$breakpoint-sm - 1px}) { @content; }
  }
  @if $breakpoint == md-down {
    @media (max-width: #{$breakpoint-md - 1px}) { @content; }
  }
  @if $breakpoint == lg-down {
    @media (max-width: #{$breakpoint-lg - 1px}) { @content; }
  }
  @if $breakpoint == sm-up {
    @media (min-width: #{$breakpoint-xs}) { @content; }
  }
  @if $breakpoint == md-up {
    @media (min-width: #{$breakpoint-sm}) { @content; }
  }
  @if $breakpoint == lg-up {
    @media (min-width: #{$breakpoint-md}) { @content; }
  }
}

// Flexbox 布局混合宏
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// 文本溢出省略号
@mixin text-ellipsis {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-ellipsis-multi($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// 按钮样式混合宏
@mixin button-reset {
  border: none;
  background: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
  text-decoration: none;
  outline: none;
}

@mixin button-primary {
  @include button-reset;
  background-color: var(--primary-color);
  color: white;
  padding: var(--spacing-sm) var(--spacing-lg);
  border-radius: var(--border-radius-medium);
  font-weight: var(--font-weight-medium);
  transition: all var(--transition-fast);
  
  &:hover {
    background-color: var(--primary-hover);
    transform: translateY(-1px);
    box-shadow: var(--shadow-light);
  }
  
  &:active {
    background-color: var(--primary-active);
    transform: translateY(0);
  }
  
  &:disabled {
    background-color: var(--text-tertiary);
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }
}

@mixin button-secondary {
  @include button-reset;
  background-color: transparent;
  color: var(--text-primary);
  border: 2px solid var(--border-color);
  padding: var(--spacing-sm) var(--spacing-lg);
  border-radius: var(--border-radius-medium);
  font-weight: var(--font-weight-medium);
  transition: all var(--transition-fast);
  
  &:hover {
    border-color: var(--primary-color);
    color: var(--primary-color);
    transform: translateY(-1px);
    box-shadow: var(--shadow-light);
  }
  
  &:active {
    border-color: var(--primary-active);
    color: var(--primary-active);
    transform: translateY(0);
  }
  
  &:disabled {
    border-color: var(--text-tertiary);
    color: var(--text-tertiary);
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }
}

// 卡片样式混合宏
@mixin card {
  background-color: var(--background-primary);
  border-radius: var(--border-radius-medium);
  box-shadow: var(--shadow-light);
  border: 1px solid var(--border-light);
  transition: all var(--transition-normal);
  
  &:hover {
    box-shadow: var(--shadow-medium);
    transform: translateY(-2px);
  }
}

@mixin card-flat {
  background-color: var(--background-primary);
  border-radius: var(--border-radius-medium);
  border: 1px solid var(--border-light);
}

// 输入框样式混合宏
@mixin input-base {
  border: 2px solid var(--border-color);
  border-radius: var(--border-radius-medium);
  padding: var(--spacing-sm) var(--spacing-md);
  font-size: var(--font-size-md);
  transition: all var(--transition-fast);
  background-color: var(--background-primary);
  
  &:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(0, 122, 255, 0.1);
  }
  
  &:disabled {
    background-color: var(--background-tertiary);
    border-color: var(--border-light);
    color: var(--text-tertiary);
    cursor: not-allowed;
  }
}

// 滚动条样式混合宏
@mixin scrollbar {
  &::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }
  
  &::-webkit-scrollbar-track {
    background: var(--background-tertiary);
    border-radius: 3px;
  }
  
  &::-webkit-scrollbar-thumb {
    background: var(--text-tertiary);
    border-radius: 3px;
    
    &:hover {
      background: var(--text-secondary);
    }
  }
}

// 动画混合宏
@mixin fade-in {
  animation: fadeIn var(--transition-normal) ease-in-out;
}

@mixin slide-in-up {
  animation: slideInUp var(--transition-normal) ease-out;
}

@mixin slide-in-down {
  animation: slideInDown var(--transition-normal) ease-out;
}

@mixin slide-in-left {
  animation: slideInLeft var(--transition-normal) ease-out;
}

@mixin slide-in-right {
  animation: slideInRight var(--transition-normal) ease-out;
}

@mixin bounce {
  animation: bounce 0.5s ease-in-out;
}

// 动画关键帧
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translate3d(0, 0, 0);
  }
  40%, 43% {
    transform: translate3d(0, -8px, 0);
  }
  70% {
    transform: translate3d(0, -4px, 0);
  }
  90% {
    transform: translate3d(0, -2px, 0);
  }
}

// 工具类混合宏
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  
  &::before {
    content: '';
    display: block;
    padding-top: percentage($height / $width);
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// 暗色主题适配
@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }
  
  [data-theme="dark"] & {
    @content;
  }
}

// 打印样式
@mixin print {
  @media print {
    @content;
  }
}